.. This README is auto-generated from `docs/README.md`. Do not edit this file directly.

========================================================================================
Pantable—A Python library for writing pandoc filters for tables with batteries included.
========================================================================================

:Date:   December 13, 2020

.. contents::
   :depth: 3
..

+-------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| docs              | |Documentation Status|                                                                                                                                                            |
+===================+===================================================================================================================================================================================+
| tests             | |                                                                                                                                                                                 |
|                   | | |GitHub Actions| |Coverage Status| |image1|                                                                                                                                     |
|                   | | |Code Quality Status| |Scrutinizer Status| |Codacy Code Quality Status| |CodeClimate Quality Status|                                                                            |
+-------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| package           | | |GitHub Releases| |PyPI Package latest release| |PyPI Wheel| |Supported versions| |Supported implementations| |Commits since latest release| |Development Status| |Downloads|   |
|                   | | |License|                                                                                                                                                                       |
+-------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Supported versions
==================

pantable v0.12 drop Python 2 support. You need to install ``pantable<0.12`` if you need to run it on Python 2.

To enforce using Python 3, depending on your system, you may need to specify ``python3`` and ``pip3`` explicitly.

pandoc versioning semantics is `MAJOR.MAJOR.MINOR.PATCH <https://pvp.haskell.org>`__ and pantable/panflute’s is MAJOR.MINOR.PATCH. Below we shows matching versions of pandoc that pantable and panflute supports, in descending order. Only major version is shown as long as the minor versions doesn’t matter.

.. table:: Version Matching [1]_

   ======== ================ ========================= =============================
   pantable panflute version supported pandoc versions supported pandoc API versions
   ======== ================ ========================= =============================
   TBA      2.0              2.11.0.4—2.11.x           1.22
   -        not supported    2.10                      1.21
   0.12     1.12             2.7-2.9                   1.17.5–1.20
   ======== ================ ========================= =============================

Note: pandoc 2.10 is short lived and 2.11 has minor API changes comparing to that, mainly for fixing its shortcomings. Please avoid using pandoc 2.10.

To use pantable with pandoc < 2.10, install pantable 0.12 explicitly by ``pip install pantable~=0.12.4``.

``pantable``
============

This allows CSV tables, optionally containing markdown syntax (disabled by default), to be put in markdown as a fenced code blocks.

Example
-------

Also see the README in `GitHub Pages <https://ickc.github.io/pantable/>`__. There’s a `LaTeX output <https://ickc.github.io/pantable/README.pdf>`__ too.

::

   ```table
   ---
   caption: '*Awesome* **Markdown** Table'
   alignment: RC
   table-width: 2/3
   markdown: True
   ---
   First row,defaulted to be header row,can be disabled
   1,cell can contain **markdown**,"It can be aribrary block element:

   - following standard markdown syntax
   - like this"
   2,"Any markdown syntax, e.g.",E = mc^2^
   ```

becomes

.. table:: *Awesome* **Markdown** Table

   +-------------------------------------------+-------------------------------------------+-------------------------------------------+
   | First row                                 | defaulted to be header row                | can be disabled                           |
   +===========================================+===========================================+===========================================+
   | 1                                         | cell can contain **markdown**             | It can be aribrary block element:         |
   |                                           |                                           |                                           |
   |                                           |                                           | -  following standard markdown syntax     |
   |                                           |                                           | -  like this                              |
   +-------------------------------------------+-------------------------------------------+-------------------------------------------+
   | 2                                         | Any markdown syntax, e.g.                 | E = mc\ :sup:`2`                          |
   +-------------------------------------------+-------------------------------------------+-------------------------------------------+

(The equation might not work if you view this on PyPI.)

Usage
-----

.. code:: bash

   pandoc -F pantable -o README.html README.md

Syntax
------

Fenced code blocks is used, with a class ``table``. See [Example].

Optionally, YAML metadata block can be used within the fenced code block, following standard pandoc YAML metadata block syntax. 7 metadata keys are recognized:

``caption``
   the caption of the table. If omitted, no caption will be inserted. Default: disabled.

``alignment``
   a string of characters among ``L,R,C,D``, case-insensitive, corresponds to Left-aligned, Right-aligned, Center-aligned, Default-aligned respectively. e.g. ``LCRD`` for a table with 4 columns. Default: ``DDD...``

``width``
   a list of relative width corresponding to the width of each columns. e.g.

   .. code:: yaml

      - width
          - 0.1
          - 0.2
          - 0.3
          - 0.4

   Default: auto calculated from the length of each line in table cells.

``table-width``
   the relative width of the table (e.g. relative to ``\linewidth``). default: 1.0

``header``
   If it has a header row or not. True/False/yes/NO are accepted, case-insensitive. default: True
``markdown``
   If CSV table cell contains markdown syntax or not. Same as above. Default: False
``include``
   the path to an CSV file, can be relative/absolute. If non-empty, override the CSV in the CodeBlock. default: None
``include-encoding``
   if specified, the file from ``include`` will be decoded according to this encoding, else assumed to be UTF-8. Hint: if you save the CSV file via Microsoft Excel, you may need to set this to ``utf-8-sig``.
``csv-kwargs``
   If specified, should be a dictionary passed to ``csv.reader`` as options. e.g.

   .. code:: yaml

      ---
      csv-kwargs:
        dialect: unix
        key: value...
      ...

``pipe_tables``
   If True, a pipe table will be constructed directly in markdown syntax instead of via AST. ``markdown`` is implied to be True. ``header`` will be overridden as true because ``pipe_tables`` must has header in pandoc.

   This trades correctness for speed. It won’t be correct if any of the cell is multiline for example, resulting in an invalid pipe table. However, it is much faster comparing to previous ``markdown: True`` case because previously per cell a subprocess to execute pandoc the parse the markdown to AST is needed.

``grid_tables``
   If True, a grid table will be constructed directly in markdown syntax instead of via AST. ``markdown`` is implied to be True. ``header`` can be used together with this.

   This trades correctness for speed. This should be more robust than ``pipe_tables`` since the ``grid_tables`` syntax supports everything the pandoc AST supports. This however depends on an external dependency. Install it by either ``pip install terminaltables`` or ``conda install terminaltables``.

``raw_markdown``
   If True, force output the table as a pipe table (which is tab-delimited.) This is sometimes useful if pandoc is very stubborn to not emit a pipe table even if ``markdown-grid_tables...`` is used. Note that this should only be used if the output format is markdown.

When the metadata keys is invalid, the default will be used instead. Note that width and table-width accept fractions as well.

``pantable2csv``
================

This one is the inverse of ``pantable``, a panflute filter to convert any native pandoc tables into the CSV table format used by pantable.

Effectively, ``pantable`` forms a “CSV Reader”, and ``pantable2csv`` forms a “CSV Writer”. It allows you to convert back and forth between these 2 formats.

For example, in the markdown source:

::

   +--------+---------------------+--------------------------+
   | First  | defaulted to be     | can be disabled          |
   | row    | header row          |                          |
   +========+=====================+==========================+
   | 1      | cell can contain    | It can be aribrary block |
   |        | **markdown**        | element:                 |
   |        |                     |                          |
   |        |                     | -   following standard   |
   |        |                     |     markdown syntax      |
   |        |                     | -   like this            |
   +--------+---------------------+--------------------------+
   | 2      | Any markdown        | $$E = mc^2$$             |
   |        | syntax, e.g.        |                          |
   +--------+---------------------+--------------------------+

   : *Awesome* **Markdown** Table

running ``pandoc -F pantable2csv -o output.md input.md``, it becomes

::

   ``` {.table}
   ---
   alignment: DDD
   caption: '*Awesome* **Markdown** Table'
   header: true
   markdown: true
   table-width: 0.8055555555555556
   width: [0.125, 0.3055555555555556, 0.375]
   ---
   First row,defaulted to be header row,can be disabled
   1,cell can contain **markdown**,"It can be aribrary block element:

   -   following standard markdown syntax
   -   like this
   "
   2,"Any markdown syntax, e.g.",$$E = mc^2$$
   ```

Related Filters
===============

The followings are pandoc filters written in Haskell that provide similar functionality. This filter is born after testing with theirs.

-  `baig/pandoc-csv2table: A Pandoc filter that renders CSV as Pandoc Markdown Tables. <https://github.com/baig/pandoc-csv2table>`__
-  `mb21/pandoc-placetable: Pandoc filter to include CSV data (from file or URL) <https://github.com/mb21/pandoc-placetable>`__
-  `sergiocorreia/panflute/csv-tables.py <https://github.com/sergiocorreia/panflute/blob/1ddcaba019b26f41f8c4f6f66a8c6540a9c5f31a/docs/source/csv-tables.py>`__

.. table:: 

   =========== ======================================= ====================== ======================== =====================================================
   \           pandoc-csv2table                        pandoc-placetable      panflute example         pantable
   =========== ======================================= ====================== ======================== =====================================================
   caption     caption                                 caption                title                    caption
   aligns      aligns = LRCD                           aligns = LRCD                                   aligns = LRCD
   width                                               widths = "0.5 0.2 0.3"                          width: [0.5, 0.2, 0.3]
   table-width                                                                                         table-width: 1.0
   header      header = yes | no                       header = yes | no      has_header: True | False header: True | False | yes | NO
   markdown                                            inlinemarkdown                                  markdown: True | False | yes | NO
   source      source                                  file                   source                   include
   others      type = simple | multiline | grid | pipe                                                 
   \                                                   delimiter                                       
   \                                                   quotechar                                       
   \                                                   id (wrapped by div)                             
   Notes                                                                                               width are auto-calculated when width is not specified
   =========== ======================================= ====================== ======================== =====================================================

.. [1]
   For pandoc API verion, check https://hackage.haskell.org/package/pandoc for pandoc-types, which is the same thing.

.. |Documentation Status| image:: https://readthedocs.org/projects/pantable/badge/?style=flat
   :target: https://readthedocs.org/projects/pantable
.. |GitHub Actions| image:: https://github.com/ickc/pantable/workflows/Python%20package/badge.svg
.. |Coverage Status| image:: https://coveralls.io/repos/ickc/pantable/badge.svg?branch=master&service=github
   :target: https://coveralls.io/r/ickc/pantable
.. |image1| image:: https://codecov.io/gh/ickc/pantable/branch/master/graphs/badge.svg?branch=master
   :target: https://codecov.io/github/ickc/pantable
.. |Code Quality Status| image:: https://landscape.io/github/ickc/pantable/master/landscape.svg?style=flat
   :target: https://landscape.io/github/ickc/pantable/master
.. |Scrutinizer Status| image:: https://img.shields.io/scrutinizer/quality/g/ickc/pantable/master.svg
   :target: https://scrutinizer-ci.com/g/ickc/pantable/
.. |Codacy Code Quality Status| image:: https://img.shields.io/codacy/grade/078ebc537c5747f68c1d4ad3d3594bbf.svg
   :target: https://www.codacy.com/app/ickc/pantable
.. |CodeClimate Quality Status| image:: https://codeclimate.com/github/ickc/pantable/badges/gpa.svg
   :target: https://codeclimate.com/github/ickc/pantable
.. |GitHub Releases| image:: https://img.shields.io/github/tag/ickc/pantable.svg?label=github+release
   :target: https://github.com/ickc/pantable/releases
.. |PyPI Package latest release| image:: https://img.shields.io/pypi/v/pantable.svg
   :target: https://pypi.org/project/pantable
.. |PyPI Wheel| image:: https://img.shields.io/pypi/wheel/pantable.svg
   :target: https://pypi.org/project/pantable
.. |Supported versions| image:: https://img.shields.io/pypi/pyversions/pantable.svg
   :target: https://pypi.org/project/pantable
.. |Supported implementations| image:: https://img.shields.io/pypi/implementation/pantable.svg
   :target: https://pypi.org/project/pantable
.. |Commits since latest release| image:: https://img.shields.io/github/commits-since/ickc/pantable/v0.13.0.svg
   :target: https://github.com/ickc/pantable/compare/v0.13.0...master
.. |Development Status| image:: https://img.shields.io/pypi/status/pantable.svg
   :target: https://pypi.python.org/pypi/pantable/
.. |Downloads| image:: https://img.shields.io/pypi/dm/pantable.svg
   :target: https://pypi.python.org/pypi/pantable/
.. |License| image:: https://img.shields.io/pypi/l/pantable.svg
